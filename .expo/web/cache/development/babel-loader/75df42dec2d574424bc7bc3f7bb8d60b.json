{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/aa/Desktop/STC/STC/screens/ShareScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { Octicons } from '@expo/vector-icons';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as Animatable from 'react-native-animatable';\nimport Select from \"../components/select\";\nimport List from \"../components/List\";\n\nvar ShareScreen = function ShareScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatePickerVisible = _useState2[0],\n      setDatePickerVisibility = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tripDate = _useState4[0],\n      setTripDate = _useState4[1];\n\n  var _useState5 = useState({\n    cityFrom: '',\n    cityTo: '',\n    TripDate: ''\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formData = _useState6[0],\n      setFormData = _useState6[1];\n\n  var limit = function limit() {\n    var string = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return string.substring(0, limit);\n  };\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      cityFrom = _useState8[0],\n      setCityFrom = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cityTo = _useState10[0],\n      setCityTo = _useState10[1];\n\n  var showDatePicker = function showDatePicker() {\n    setDatePickerVisibility(true);\n  };\n\n  var hideDatePicker = function hideDatePicker() {\n    setDatePickerVisibility(false);\n  };\n\n  var handleConfirm = function handleConfirm(date) {\n    var selectedDate = new Date(date);\n    var formattedDate = selectedDate.getMonth() + 1 + \"/\" + selectedDate.getDate() + \"/\" + selectedDate.getFullYear();\n    setTripDate(formattedDate);\n    handleTripDate(date);\n    hideDatePicker();\n  };\n\n  var handleSelectFrom = function handleSelectFrom(val) {\n    setCityFrom(val);\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      cityFrom: val\n    }));\n  };\n\n  var handleSelectTo = function handleSelectTo(val) {\n    setCityTo(val);\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      cityTo: val\n    }));\n  };\n\n  var handleTripDate = function handleTripDate(val) {\n    setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n      TripDate: val\n    }));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var pageData = formData;\n    var formSerialize = JSON.stringify({\n      pageData: pageData\n    });\n    navigation.navigate('FormDetails', {\n      cityFrom: cityFrom,\n      cityTo: cityTo,\n      tripDate: JSON.stringify(tripDate)\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.mainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.headerContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.drawerBarsIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"bars\",\n    size: 24,\n    color: \"#003c30\",\n    onPress: function onPress() {\n      return navigation.toggleDrawer();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.headerTitle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Share\"))), React.createElement(View, {\n    style: styles.formDetailsBg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: '#003c30'\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 35,\n    paddingVertical: 15\n  },\n  headerTitle: {\n    color: '#FFF',\n    fontSize: 15,\n    fontFamily: 'Montserrat-Light'\n  },\n  drawerBarsIcon: {\n    width: 50,\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#FFF',\n    marginLeft: 25,\n    marginRight: 20,\n    borderRadius: 20,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    elevation: 5\n  },\n  formDetailsBg: {\n    backgroundColor: '#f4f5f7',\n    width: '100%',\n    height: height - 40,\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    alignItems: 'center'\n  }\n});\nexport default ShareScreen;","map":{"version":3,"sources":["/Users/aa/Desktop/STC/STC/screens/ShareScreen.js"],"names":["React","useState","FontAwesome","Feather","Octicons","DateTimePickerModal","MaterialIcons","AsyncStorage","DateTimePicker","Dimensions","get","width","height","LinearGradient","Animatable","Select","List","ShareScreen","navigation","isDatePickerVisible","setDatePickerVisibility","tripDate","setTripDate","cityFrom","cityTo","TripDate","formData","setFormData","limit","string","substring","setCityFrom","setCityTo","showDatePicker","hideDatePicker","handleConfirm","date","selectedDate","Date","formattedDate","getMonth","getDate","getFullYear","handleTripDate","handleSelectFrom","val","handleSelectTo","handleSubmit","pageData","formSerialize","JSON","stringify","navigate","styles","mainContainer","headerContainer","drawerBarsIcon","toggleDrawer","headerTitle","formDetailsBg","StyleSheet","create","flex","backgroundColor","flexDirection","alignItems","marginTop","paddingVertical","color","fontSize","fontFamily","justifyContent","marginLeft","marginRight","borderRadius","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","paddingHorizontal","borderTopLeftRadius","borderTopRightRadius"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { View, Text, SafeAreaView, StyleSheet, TouchableOpacity, Platform, Dimensions, Image, ScrollView, Button,TextInput } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { Feather } from '@expo/vector-icons';\nimport { Octicons } from '@expo/vector-icons';\nimport DateTimePickerModal from \"react-native-modal-datetime-picker\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\n\n\nconst {width, height} = Dimensions.get('screen');\nimport { LinearGradient } from 'expo-linear-gradient';\nimport * as Animatable from 'react-native-animatable';\nimport Select from '../components/select';\nimport List from '../components/List'\n\n\n\nconst ShareScreen = ({navigation}) => {\n    const [isDatePickerVisible, setDatePickerVisibility] = useState(false);\n    const [tripDate, setTripDate] = useState([]);\n    const [formData, setFormData] = useState({\n        cityFrom: '',\n        cityTo: '',\n        TripDate: '',\n    });\n\n    const limit = (string = '', limit = 0) => {  \n        return string.substring(0, limit)\n      }\n\n    const [cityFrom, setCityFrom] = useState('');\n    const [cityTo, setCityTo] = useState('');\n\n    const showDatePicker = () => {\n      setDatePickerVisibility(true);\n    };\n  \n    const hideDatePicker = () => {\n      setDatePickerVisibility(false);\n    };\n  \n    const handleConfirm = (date) => {\n    //   console.warn(\"A date has been picked: \", date);\n    const selectedDate = new Date(date); // pass in date param here\n    const formattedDate = `${selectedDate.getMonth()+1}/${selectedDate.getDate()}/${selectedDate.getFullYear()}`;\n\n        setTripDate(formattedDate);\n        handleTripDate(date)\n        hideDatePicker();\n    };\n\n    const handleSelectFrom = (val) => {\n        setCityFrom(val);\n        // alert(val)\n        setFormData({\n            ...formData,\n            cityFrom: val\n        });\n    }\n\n    const handleSelectTo = (val) => {\n        setCityTo(val)\n        // alert(val)\n        setFormData({\n            ...formData,\n            cityTo: val\n        });\n    }\n\n    const handleTripDate = (val) => {\n        // alert(val)\n        setFormData({\n            ...formData,\n            TripDate: val\n        });\n    }\n\n    const handleSubmit = () => {\n        const pageData = formData;\n        // navigation.setParams({pageData});\n        const formSerialize = JSON.stringify({pageData});\n\n        navigation.navigate('FormDetails', {\n            cityFrom: cityFrom,\n            cityTo: cityTo,\n            tripDate: JSON.stringify(tripDate)\n        });\n\n        // navigation.navigate('FormDetails');\n    }\n\n    // ASYNC STORE HERE\n    //  AsyncStorage.setItem('@formData', formData);\n\n    return (\n        <SafeAreaView style={styles.mainContainer}>\n            <View style={styles.headerContainer}>\n                <View style={styles.drawerBarsIcon}>\n                    <FontAwesome name=\"bars\" size={24} color='#003c30' onPress={() => navigation.toggleDrawer()} />\n                </View>\n\n                <View>\n                    <Text style={styles.headerTitle}>Share</Text>\n                </View>\n            </View>\n\n            <View style={styles.formDetailsBg}>\n\n            </View>\n\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    mainContainer: {\n        flex: 1,\n        backgroundColor: '#003c30',\n    },\n    headerContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        // justifyContent: 'space-between',\n        marginTop: 35, \n        paddingVertical: 15,\n    },\n    headerTitle: {\n        color: '#FFF',\n        fontSize: 15,\n        fontFamily: 'Montserrat-Light',\n    },\n    drawerBarsIcon: {\n        width: 50,\n        height: 50,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#FFF',\n        marginLeft: 25,\n        marginRight: 20,\n        borderRadius: 20,\n        // padding: 15,\n        shadowColor: 'black',\n        shadowOpacity: 0.26,\n        shadowOffset: {width: 0, height: 2},\n        shadowRadius: 8,\n        elevation: 5,\n    },\n    formDetailsBg: {\n        backgroundColor: '#f4f5f7',\n        width: '100%',\n        height: height - 40,\n        paddingVertical: 20,\n        paddingHorizontal: 10,\n        borderTopLeftRadius: 20,\n        borderTopRightRadius: 20,\n        // justifyContent: 'center'\n        alignItems: 'center',\n    },\n})\n\nexport default ShareScreen\n"]},"metadata":{},"sourceType":"module"}